"use strict";
/* Copyright (c) 2017 Environmental Systems Research Institute, Inc.
 * Apache-2.0 */
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var arcgis_rest_request_1 = require("@esri/arcgis-rest-request");
var helpers_1 = require("./helpers");
/**
 * Update features request. See the [REST Documentation](https://developers.arcgis.com/rest/services-reference/update-features.htm) for more information.
 *
 * ```js
 * import { updateFeatures } from '@esri/arcgis-rest-feature-service';
 *
 * const url = "https://sampleserver6.arcgisonline.com/arcgis/rest/services/ServiceRequest/FeatureServer/0";
 *
 * updateFeatures({
 *   url,
 *   updates: [{
 *     geometry: { x: -120, y: 45, spatialReference: { wkid: 4326 } },
 *     attributes: { status: "alive" }
 *   }]
 * });
 * ```
 *
 * @param requestOptions - Options for the request.
 * @returns A Promise that will resolve with the updateFeatures response.
 */
function updateFeatures(requestOptions) {
    var url = requestOptions.url + "/updateFeatures";
    // edit operations are POST only
    var options = tslib_1.__assign({ params: {} }, requestOptions);
    helpers_1.appendCustomParams(requestOptions, options);
    // mixin, don't overwrite
    options.params.features = requestOptions.updates;
    delete options.params.updates;
    return arcgis_rest_request_1.request(url, options);
}
exports.updateFeatures = updateFeatures;
//# sourceMappingURL=update.js.map