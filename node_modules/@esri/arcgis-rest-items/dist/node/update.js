"use strict";
/* Copyright (c) 2018 Environmental Systems Research Institute, Inc.
 * Apache-2.0 */
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var arcgis_rest_request_1 = require("@esri/arcgis-rest-request");
var helpers_1 = require("./helpers");
/**
 * Update an Item
 *
 * * ```js
 * import { updateItem } from '@esri/arcgis-rest-items';
 *
 * updateItem({
 *   authentication: userSession,
 *   item: {
 *     id: "3ef",
 *     description: "A three hour tour"
 *   }
 * })
 * ```
 *
 * @param item - The item to update.
 * @param requestOptions - Options for the request.
 * @returns A Promise that updates an item.
 */
function updateItem(requestOptions) {
    var owner = helpers_1.determineOwner(requestOptions);
    var url = arcgis_rest_request_1.getPortalUrl(requestOptions) + "/content/users/" + owner + "/items/" + requestOptions.item.id + "/update";
    // serialize the item into something Portal will accept
    requestOptions.params = tslib_1.__assign({}, requestOptions.params, helpers_1.serializeItem(requestOptions.item));
    return arcgis_rest_request_1.request(url, requestOptions);
}
exports.updateItem = updateItem;
/**
 * Update a resource associated with an item
 *
 * @param requestOptions - Options for the request
 * @returns A Promise that updates an item resource.
 */
function updateItemResource(requestOptions) {
    var owner = helpers_1.determineOwner(requestOptions);
    var url = arcgis_rest_request_1.getPortalUrl(requestOptions) + "/content/users/" + owner + "/items/" + requestOptions.id + "/updateResources";
    // mix in user supplied params
    requestOptions.params = tslib_1.__assign({ file: requestOptions.resource, fileName: requestOptions.name, text: requestOptions.content }, requestOptions.params);
    // only override whatever access was specified previously if 'private' was passed explicitly
    if (typeof requestOptions.private !== "undefined") {
        requestOptions.params.access = requestOptions.private
            ? "private"
            : "inherit";
    }
    return arcgis_rest_request_1.request(url, requestOptions);
}
exports.updateItemResource = updateItemResource;
/**
 * Move an item to a folder
 *
 * ```js
 * import { moveItem } from '@esri/arcgis-rest-items';
 *
 * moveItem({
 *   itemId: "3ef",
 *   folderId: "7c5",
 *   authentication: userSession
 * }) ```
 *
 * @param requestOptions - Options for the request
 * @returns A Promise that resolves with owner and folder details once the move has been completed
 */
function moveItem(requestOptions) {
    var owner = helpers_1.determineOwner(requestOptions);
    var url = arcgis_rest_request_1.getPortalUrl(requestOptions) + "/content/users/" + owner + "/items/" + requestOptions.itemId + "/move";
    var folderId = requestOptions.folderId;
    if (!folderId) {
        folderId = "/";
    }
    requestOptions.params = tslib_1.__assign({ folder: folderId }, requestOptions.params);
    return arcgis_rest_request_1.request(url, requestOptions);
}
exports.moveItem = moveItem;
//# sourceMappingURL=update.js.map