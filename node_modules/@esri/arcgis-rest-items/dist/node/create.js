"use strict";
/* Copyright (c) 2018 Environmental Systems Research Institute, Inc.
 * Apache-2.0 */
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var arcgis_rest_request_1 = require("@esri/arcgis-rest-request");
var helpers_1 = require("./helpers");
/**
 * Create a folder
 *
 * ```js
 * import { createFolder } from '@esri/arcgis-rest-items';
 *
 * createFolder({
 *   title: 'Map Collection',
 *   authentication: userSession
 * }) ```
 *
 * @param requestOptions - Options for the request
 * @returns A Promise that resolves with folder details once the folder has been created
 */
function createFolder(requestOptions) {
    var owner = helpers_1.determineOwner(requestOptions);
    var baseUrl = arcgis_rest_request_1.getPortalUrl(requestOptions) + "/content/users/" + owner;
    var url = baseUrl + "/createFolder";
    requestOptions.params = tslib_1.__assign({ title: requestOptions.title }, requestOptions.params);
    return arcgis_rest_request_1.request(url, requestOptions);
}
exports.createFolder = createFolder;
/**
 * Create an item in a folder
 *
 * @param requestOptions = Options for the request
 */
function createItemInFolder(requestOptions) {
    var owner = helpers_1.determineOwner(requestOptions);
    var baseUrl = arcgis_rest_request_1.getPortalUrl(requestOptions) + "/content/users/" + owner;
    var url = baseUrl + "/addItem";
    if (requestOptions.folder) {
        url = baseUrl + "/" + requestOptions.folder + "/addItem";
    }
    // serialize the item into something Portal will accept
    requestOptions.params = tslib_1.__assign({}, requestOptions.params, helpers_1.serializeItem(requestOptions.item));
    return arcgis_rest_request_1.request(url, requestOptions);
}
exports.createItemInFolder = createItemInFolder;
/**
 * Create an Item in the user's root folder
 *
 * ```js
 * import { createItem } from '@esri/arcgis-rest-items';
 *
 * createItem({
 *   authentication: userSession,
 *   item: {
 *     title: "The Amazing Voyage",
 *     type: "Web Map"
 *   }
 * })
 * ```
 *
 * @param requestOptions - Options for the request
 * @returns A Promise that creates an item.
 */
function createItem(requestOptions) {
    // delegate to createItemInFolder placing in the root of the filestore
    var options = tslib_1.__assign({ folder: null }, requestOptions);
    return createItemInFolder(options);
}
exports.createItem = createItem;
//# sourceMappingURL=create.js.map