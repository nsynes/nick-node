"use strict";
/* Copyright (c) 2018 Environmental Systems Research Institute, Inc.
 * Apache-2.0 */
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var arcgis_rest_request_1 = require("@esri/arcgis-rest-request");
/**
 * Get an item by id
 *
 * @param id - Item Id
 * @param requestOptions - Options for the request
 * @returns A Promise that will resolve with the data from the response.
 */
function getItem(id, requestOptions) {
    var url = arcgis_rest_request_1.getPortalUrl(requestOptions) + "/content/items/" + id;
    // default to a GET request
    var options = tslib_1.__assign({ httpMethod: "GET" }, requestOptions);
    return arcgis_rest_request_1.request(url, options);
}
exports.getItem = getItem;
/**
 * Get the /data for an item.
 * @param id - Item Id
 * @param requestOptions - Options for the request
 * @returns A Promise that will resolve with the json data for the item.
 */
function getItemData(id, requestOptions) {
    var url = arcgis_rest_request_1.getPortalUrl(requestOptions) + "/content/items/" + id + "/data";
    // default to a GET request
    var options = tslib_1.__assign({ httpMethod: "GET", params: {} }, requestOptions);
    if (options.file) {
        options.params.f = null;
    }
    return arcgis_rest_request_1.request(url, options);
}
exports.getItemData = getItemData;
/**
 * Get the resources associated with an item
 *
 * @param requestOptions - Options for the request
 * @returns A Promise to get some item resources.
 */
function getItemResources(requestOptions) {
    var url = arcgis_rest_request_1.getPortalUrl(requestOptions) + "/content/items/" + requestOptions.id + "/resources";
    // mix in user supplied params
    requestOptions.params = tslib_1.__assign({}, requestOptions.params, { num: 1000 });
    return arcgis_rest_request_1.request(url, requestOptions);
}
exports.getItemResources = getItemResources;
//# sourceMappingURL=get.js.map